---
import { getLangFromPath } from "@/i18n/lang";
// 是否是开发模式
const isDev = import.meta.env.DEV;
---

<div
  id="search-container"
  class="fixed inset-0 z-50 hidden bg-black/50 backdrop-blur-sm"
>
  <div class="flex min-h-full items-start justify-center p-4 pt-16">
    <div
      class="w-full max-w-2xl rounded-lg bg-white shadow-xl dark:bg-gray-800"
    >
      <!-- 搜索头部 -->
      <div class="border-b border-gray-200 p-4 dark:border-gray-700">
        <div class="relative">
          <div
            class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3"
          >
            <svg
              class="h-5 w-5 text-gray-400"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                clip-rule="evenodd"></path>
            </svg>
          </div>
          <input
            id="search-input"
            type="text"
            placeholder="搜索文章..."
            class="w-full rounded-md border border-gray-300 bg-white py-3 pl-10 pr-16 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400"
            autocomplete="off"
            spellcheck="false"
          />
          <div class="absolute inset-y-0 right-0 flex items-center pr-3">
            <kbd
              class="inline-flex items-center rounded border border-gray-200 px-2 py-1 text-xs font-mono text-gray-500 dark:border-gray-600 dark:text-gray-400"
            >
              ESC
            </kbd>
          </div>
        </div>
      </div>

      <!-- 搜索结果 -->
      <div id="search-results" class="max-h-96 overflow-y-auto">
        <!-- 空状态 -->
        <div
          id="search-empty"
          class="p-8 text-center text-gray-500 dark:text-gray-400"
        >
          <svg
            class="mx-auto h-12 w-12 text-gray-300 dark:text-gray-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
          <p class="mt-4 text-sm">输入关键词开始搜索</p>
        </div>

        <!-- 加载状态 -->
        <div id="search-loading" class="hidden p-8 text-center">
          <div
            class="mx-auto h-6 w-6 animate-spin rounded-full border-2 border-blue-500 border-t-transparent"
          >
          </div>
          <p class="mt-4 text-sm text-gray-500 dark:text-gray-400">搜索中...</p>
        </div>

        <!-- 无结果状态 -->
        <div
          id="search-no-results"
          class="hidden p-8 text-center text-gray-500 dark:text-gray-400"
        >
          <svg
            class="mx-auto h-12 w-12 text-gray-300 dark:text-gray-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.54-1.006-6.025-2.75M15 17H9v4l3-2 3 2v-4z"
            ></path>
          </svg>
          <p class="mt-4 text-sm">未找到相关内容</p>
        </div>

        <!-- 结果列表 -->
        <ul
          id="search-results-list"
          class="hidden divide-y divide-gray-200 dark:divide-gray-700"
        >
          <!-- 结果项目将通过 JavaScript 动态插入 -->
        </ul>
      </div>

      <!-- 搜索底部 -->
      <div
        class="border-t border-gray-200 p-4 text-xs text-gray-500 dark:border-gray-700 dark:text-gray-400"
      >
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-4">
            <div class="flex items-center space-x-1">
              <kbd
                class="inline-flex items-center rounded border border-gray-200 px-1.5 py-0.5 font-mono dark:border-gray-600"
                >↑</kbd
              >
              <kbd
                class="inline-flex items-center rounded border border-gray-200 px-1.5 py-0.5 font-mono dark:border-gray-600"
                >↓</kbd
              >
              <span>导航</span>
            </div>
            <div class="flex items-center space-x-1">
              <kbd
                class="inline-flex items-center rounded border border-gray-200 px-1.5 py-0.5 font-mono dark:border-gray-600"
                >Enter</kbd
              >
              <span>选择</span>
            </div>
          </div>
          <div class="text-right">由 Pagefind 驱动</div>
        </div>
      </div>
    </div>
  </div>
</div>

<script is:inline type="module" define:vars={{ isDev }}>
  const pagefind = await import(
    isDev ? "../../../dist/pagefind/pagefind.js" : "/pagefind/pagefind.js"
  );
  async function initializeSearch() {
    console.log("initializeSearch");
    try {
      if (pagefind) {
        pagefind.destroy();
      }
      pagefind.init();

      // 获取DOM元素
      const searchButton = document.getElementById("search-button");
      const searchContainer = document.getElementById("search-container");
      const searchInput = document.getElementById("search-input");
      const searchResults = document.getElementById("search-results-list");
      const searchEmpty = document.getElementById("search-empty");
      const searchLoading = document.getElementById("search-loading");
      const searchNoResults = document.getElementById("search-no-results");

      searchButton.addEventListener("click", () => {
        openSearch();
      });

      // 打开搜索模态框
      function openSearch() {
        searchContainer.classList.remove("hidden");
        searchInput.focus();
        document.body.style.overflow = "hidden";
      }

      // 关闭搜索模态框
      function closeSearch() {
        searchContainer.classList.add("hidden");
        document.body.style.overflow = "";
        searchInput.value = "";
        clearResults();
      }

      // 清空搜索结果
      function clearResults() {
        searchResults.classList.add("hidden");
        searchEmpty.classList.remove("hidden");
        searchLoading.classList.add("hidden");
        searchNoResults.classList.add("hidden");
      }

      // 显示搜索结果
      function showResults(results) {
        searchEmpty.classList.add("hidden");
        searchLoading.classList.add("hidden");

        if (results.length === 0) {
          searchNoResults.classList.remove("hidden");
          searchResults.classList.add("hidden");
        } else {
          searchNoResults.classList.add("hidden");
          searchResults.classList.remove("hidden");
          renderResults(results);
        }
      }

      // 渲染搜索结果
      function renderResults(results) {
        searchResults.innerHTML = results
          .map(
            (result, index) => `
        <li>
          <a href="${result.url}" class="search-result-item block p-4 hover:bg-gray-50 dark:hover:bg-gray-700 ${index === 0 ? "bg-gray-50 dark:bg-gray-700" : ""}" data-index="${index}">
            <div class="text-sm font-medium text-gray-900 dark:text-white line-clamp-1">
              ${result.meta?.title || "无标题"}
            </div>
            <div class="mt-1 text-sm text-gray-500 dark:text-gray-400 line-clamp-2">
              ${result.excerpt || ""}
            </div>
            <div class="mt-2 text-xs text-gray-400 dark:text-gray-500">
              ${result.url}
            </div>
          </a>
        </li>
      `,
          )
          .join("");
      }

      // 执行搜索
      async function performSearch(query) {
        if (!query.trim()) {
          clearResults();
          return;
        }

        // 显示加载状态
        searchEmpty.classList.add("hidden");
        searchResults.classList.add("hidden");
        searchNoResults.classList.add("hidden");
        searchLoading.classList.remove("hidden");

        try {
          const search = await pagefind.search(query);
          const results = await Promise.all(
            search.results.slice(0, 10).map(async (result) => {
              const data = await result.data();
              return {
                url: isDev ? data.url.replace("/dist", "") : data.url,
                meta: data.meta,
                excerpt: data.excerpt,
                content: data.content,
              };
            }),
          );

          showResults(results);
        } catch (error) {
          console.error("搜索出错:", error);
          showResults([]);
        }
      }

      // 防抖搜索
      let searchTimeout;
      function debounceSearch(query) {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => performSearch(query), 150);
      }

      // 键盘导航
      let selectedIndex = -1;
      function updateSelection(newIndex) {
        const items = searchResults.querySelectorAll(".search-result-item");
        if (items.length === 0) return;

        // 移除之前的选中状态
        items.forEach((item) => {
          item.classList.remove("bg-gray-50", "dark:bg-gray-700");
        });

        // 设置新的选中状态
        selectedIndex = Math.max(-1, Math.min(newIndex, items.length - 1));
        if (selectedIndex >= 0) {
          items[selectedIndex].classList.add("bg-gray-50", "dark:bg-gray-700");
        }
      }

      // 事件监听器 - 使用事件委托来处理动态元素
      document.addEventListener("click", (e) => {
        // 查找具有搜索触发相关 ID 或 class 的元素
        const searchTrigger =
          e.target.closest("[data-search-trigger]") ||
          e.target.closest("#search-trigger") ||
          e.target.closest(".search-trigger");
        if (searchTrigger) {
          e.preventDefault();
          openSearch();
        }
      });

      // 快捷键监听
      document.addEventListener("keydown", (e) => {
        // Cmd/Ctrl + K 打开搜索
        if ((e.metaKey || e.ctrlKey) && e.key === "k") {
          e.preventDefault();
          openSearch();
        }

        // ESC 关闭搜索
        if (e.key === "Escape") {
          closeSearch();
        }
      });

      // 搜索容器点击关闭
      searchContainer.addEventListener("click", (e) => {
        if (e.target === searchContainer) {
          closeSearch();
        }
      });

      // 搜索输入事件
      searchInput.addEventListener("input", (e) => {
        selectedIndex = -1;
        debounceSearch(e.target.value);
      });

      // 搜索框键盘导航
      searchInput.addEventListener("keydown", (e) => {
        const items = searchResults.querySelectorAll(".search-result-item");

        if (e.key === "ArrowDown") {
          e.preventDefault();
          updateSelection(selectedIndex + 1);
        } else if (e.key === "ArrowUp") {
          e.preventDefault();
          updateSelection(selectedIndex - 1);
        } else if (
          e.key === "Enter" &&
          selectedIndex >= 0 &&
          items[selectedIndex]
        ) {
          e.preventDefault();
          items[selectedIndex].click();
        }
      });
    } catch (error) {
      console.error("Pagefind 加载失败:", error);
    }
  }

  document.addEventListener("astro:page-load", () => {
    initializeSearch();
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  mark {
    padding: 0;
    border-radius: 2px;
  }

  .search-result-item {
    transition: background-color 0.15s ease-in-out;
  }
</style>
